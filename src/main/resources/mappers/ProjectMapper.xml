<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.buildingcompany.dao.IProjectDAO">

    <resultMap id="projectResultMap" type="org.example.buildingcompany.classes.Project">
        <result property="id" column="projects_id"/>
        <result property="name" column="projects_name"/>
        <result property="description" column="projects_description"/>
        <result property="cost" column="cost"/>
        <association property="client" javaType="org.example.buildingcompany.classes.Client"
                     resultMap="org.example.buildingcompany.dao.IClientDAO.clientResultMap"/>
        <association property="address" javaType="org.example.buildingcompany.classes.Address"
                     resultMap="org.example.buildingcompany.dao.IAddressDAO.addressResultMap"/>
    </resultMap>

    <select id="findById" resultMap="org.example.buildingcompany.dao.IProjectDAO.projectResultMap">
        select P.id as projects_id,
        P.name as projects_name,
        P.description as projects_description,
        cost,
        A.id as address_id,
        A.address as address,
        C.id as clients_id,
        C.name as clients_name
        from projects P join address A join clients C on P.address_id = A.id and P.clients_id = C.id
        where P.id = 1;
    </select>

    <insert id="insert" parameterType="org.example.buildingcompany.classes.Project">
        insert into projects (name, description, cost, clients_id, address_id)
        values(#{name}, #{description}, #{cost}, #{clients_id}, #{address_id});
    </insert>

    <select id="findAll" resultType="org.example.buildingcompany.classes.Project">
        select * from projects;
    </select>

    <select id="getProjectByEmployeeId" resultType="org.example.buildingcompany.classes.Project">
        select * from projects where id = (select project_id from employees where id = #{id});
    </select>

    <update id="update" parameterType="org.example.buildingcompany.classes.Project">
        update projects set name = #{name}, description = #{description},
        cost = #{cost}, clients_id = #{clients_id}, address_id = #{address_id}
        where id = #{id};
    </update>

    <delete id="deleteById" parameterType="org.example.buildingcompany.classes.Project">
        delete from projects where id = #{id};
    </delete>
</mapper>